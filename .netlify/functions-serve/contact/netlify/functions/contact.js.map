{
  "version": 3,
  "sources": ["../../../../Downloads/FAAAA - Copy/netlify/functions/contact.cjs"],
  "sourceRoot": "C:/Users/Atul/AppData/Local/Temp/tmp-3100-Mxb343VPXIcK",
  "sourcesContent": ["\nconst fs = require('fs').promises;\nconst path = require('path');\n\nexports.handler = async function(event, context) {\n  const documentsPath = path.join(process.cwd(), 'documents.json');\n\n  const readDocuments = async () => {\n    try {\n      const data = await fs.readFile(documentsPath, 'utf8');\n      const parsedData = JSON.parse(data);\n      if (Array.isArray(parsedData) || typeof parsedData !== 'object' || parsedData === null) {\n        return { contactSubmissions: parsedData };\n      }\n      return parsedData;\n    } catch (error) {\n      if (error.code === 'ENOENT') {\n        return { contactSubmissions: [] };\n      }\n      throw error;\n    }\n  };\n\n  if (event.httpMethod === 'GET') {\n    try {\n      const documents = await readDocuments();\n      return {\n        statusCode: 200,\n        body: JSON.stringify(documents.contactSubmissions || []),\n      };\n    } catch (error) {\n      console.error('Error reading documents.json:', error);\n      return {\n        statusCode: 500,\n        body: JSON.stringify({ message: 'Error reading submissions.' }),\n      };\n    }\n  }\n\n  if (event.httpMethod !== 'POST') {\n    return {\n      statusCode: 405,\n      body: 'Method Not Allowed',\n    };\n  }\n\n  try {\n    const body = JSON.parse(event.body);\n    const { name, organization, email, contactNumber, message } = body;\n\n    if (!name || !organization || !email || !contactNumber || !message) {\n      return {\n        statusCode: 400,\n        body: JSON.stringify({ message: 'All fields are required.' }),\n      };\n    }\n\n    const newSubmission = {\n      id: Date.now(),\n      submittedAt: new Date(),\n      ...body\n    };\n\n    const documents = await readDocuments();\n    if (!documents.contactSubmissions) {\n      documents.contactSubmissions = [];\n    }\n    documents.contactSubmissions = [newSubmission, ...documents.contactSubmissions];\n\n    await fs.writeFile(documentsPath, JSON.stringify(documents, null, 2));\n\n    return {\n      statusCode: 200,\n      body: JSON.stringify({ message: 'Submission successful!' }),\n    };\n  } catch (error) {\n    console.error('Error processing submission:', error);\n    return {\n      statusCode: 500,\n      body: JSON.stringify({ message: 'Error processing submission.' }),\n    };\n  }\n};\n"],
  "mappings": ";AACA,IAAM,KAAK,QAAQ,IAAI,EAAE;AACzB,IAAM,OAAO,QAAQ,MAAM;AAE3B,QAAQ,UAAU,eAAe,OAAO,SAAS;AAC/C,QAAM,gBAAgB,KAAK,KAAK,QAAQ,IAAI,GAAG,gBAAgB;AAE/D,QAAM,gBAAgB,YAAY;AAChC,QAAI;AACF,YAAM,OAAO,MAAM,GAAG,SAAS,eAAe,MAAM;AACpD,YAAM,aAAa,KAAK,MAAM,IAAI;AAClC,UAAI,MAAM,QAAQ,UAAU,KAAK,OAAO,eAAe,YAAY,eAAe,MAAM;AACtF,eAAO,EAAE,oBAAoB,WAAW;AAAA,MAC1C;AACA,aAAO;AAAA,IACT,SAAS,OAAO;AACd,UAAI,MAAM,SAAS,UAAU;AAC3B,eAAO,EAAE,oBAAoB,CAAC,EAAE;AAAA,MAClC;AACA,YAAM;AAAA,IACR;AAAA,EACF;AAEA,MAAI,MAAM,eAAe,OAAO;AAC9B,QAAI;AACF,YAAM,YAAY,MAAM,cAAc;AACtC,aAAO;AAAA,QACL,YAAY;AAAA,QACZ,MAAM,KAAK,UAAU,UAAU,sBAAsB,CAAC,CAAC;AAAA,MACzD;AAAA,IACF,SAAS,OAAO;AACd,cAAQ,MAAM,iCAAiC,KAAK;AACpD,aAAO;AAAA,QACL,YAAY;AAAA,QACZ,MAAM,KAAK,UAAU,EAAE,SAAS,6BAA6B,CAAC;AAAA,MAChE;AAAA,IACF;AAAA,EACF;AAEA,MAAI,MAAM,eAAe,QAAQ;AAC/B,WAAO;AAAA,MACL,YAAY;AAAA,MACZ,MAAM;AAAA,IACR;AAAA,EACF;AAEA,MAAI;AACF,UAAM,OAAO,KAAK,MAAM,MAAM,IAAI;AAClC,UAAM,EAAE,MAAM,cAAc,OAAO,eAAe,QAAQ,IAAI;AAE9D,QAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,SAAS,CAAC,iBAAiB,CAAC,SAAS;AAClE,aAAO;AAAA,QACL,YAAY;AAAA,QACZ,MAAM,KAAK,UAAU,EAAE,SAAS,2BAA2B,CAAC;AAAA,MAC9D;AAAA,IACF;AAEA,UAAM,gBAAgB;AAAA,MACpB,IAAI,KAAK,IAAI;AAAA,MACb,aAAa,oBAAI,KAAK;AAAA,MACtB,GAAG;AAAA,IACL;AAEA,UAAM,YAAY,MAAM,cAAc;AACtC,QAAI,CAAC,UAAU,oBAAoB;AACjC,gBAAU,qBAAqB,CAAC;AAAA,IAClC;AACA,cAAU,qBAAqB,CAAC,eAAe,GAAG,UAAU,kBAAkB;AAE9E,UAAM,GAAG,UAAU,eAAe,KAAK,UAAU,WAAW,MAAM,CAAC,CAAC;AAEpE,WAAO;AAAA,MACL,YAAY;AAAA,MACZ,MAAM,KAAK,UAAU,EAAE,SAAS,yBAAyB,CAAC;AAAA,IAC5D;AAAA,EACF,SAAS,OAAO;AACd,YAAQ,MAAM,gCAAgC,KAAK;AACnD,WAAO;AAAA,MACL,YAAY;AAAA,MACZ,MAAM,KAAK,UAAU,EAAE,SAAS,+BAA+B,CAAC;AAAA,IAClE;AAAA,EACF;AACF;",
  "names": []
}
